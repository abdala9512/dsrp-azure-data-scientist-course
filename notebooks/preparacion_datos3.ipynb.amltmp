{
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Clase 6: Feature Engineering\n",
        "## DP-100 Azure Data Scientist / DSRP\n",
        "## Clase 16 Septiembre\n",
        "\n",
        "### Dataset Utilizado: Hotel Booking\n",
        "\n",
        "https://www.kaggle.com/code/touba7/hotel-booking"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from azure.ai.ml import MLClient\n",
        "from azure.ai.ml.entities import Data\n",
        "from azure.ai.ml.constants import AssetTypes\n",
        "from azure.identity import DefaultAzureCredential\n",
        "from sklearn.feature_selection import VarianceThreshold\n",
        "from sklearn.preprocessing import OneHotEncoder\n",
        "from sklearn.feature_extraction import FeatureHasher\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "sns.set_style(\"whitegrid\")\n",
        "plt.rcParams[\"figure.figsize\"] = (15,10)\n",
        "\n",
        "# CREDENCIALES AZURE\n",
        "ml_client = MLClient.from_config(credential=DefaultAzureCredential())\n",
        "# METADATA ASSET\n",
        "data_asset = ml_client.data.get(\"booking-dsrp\", version=\"1\")\n"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "Found the config file in: /config.json\n"
        }
      ],
      "execution_count": 1,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1727310154010
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# LEER DATA ASSET\n",
        "dataframe_reservas_hotel_raw = pd.read_csv(data_asset.path)\n",
        "dataframe_reservas_hotel_raw.head()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 2,
          "data": {
            "text/plain": "          hotel  is_canceled  lead_time  arrival_date_year arrival_date_month  \\\n0  Resort Hotel            0        342               2015               July   \n1  Resort Hotel            0        737               2015               July   \n2  Resort Hotel            0          7               2015               July   \n3  Resort Hotel            0         13               2015               July   \n4  Resort Hotel            0         14               2015               July   \n\n   arrival_date_week_number  arrival_date_day_of_month  \\\n0                        27                          1   \n1                        27                          1   \n2                        27                          1   \n3                        27                          1   \n4                        27                          1   \n\n   stays_in_weekend_nights  stays_in_week_nights  adults  ...  customer_type  \\\n0                        0                     0       2  ...      Transient   \n1                        0                     0       2  ...      Transient   \n2                        0                     1       1  ...      Transient   \n3                        0                     1       1  ...      Transient   \n4                        0                     2       2  ...      Transient   \n\n    adr required_car_parking_spaces total_of_special_requests  \\\n0   0.0                           0                         0   \n1   0.0                           0                         0   \n2  75.0                           0                         0   \n3  75.0                           0                         0   \n4  98.0                           0                         1   \n\n  reservation_status reservation_status_date            name  \\\n0          Check-Out              2015-07-01   Ernest Barnes   \n1          Check-Out              2015-07-01    Andrea Baker   \n2          Check-Out              2015-07-02  Rebecca Parker   \n3          Check-Out              2015-07-02    Laura Murray   \n4          Check-Out              2015-07-03     Linda Hines   \n\n                         email  phone-number       credit_card  \n0  Ernest.Barnes31@outlook.com  669-792-1661  ************4322  \n1       Andrea_Baker94@aol.com  858-637-6955  ************9157  \n2   Rebecca_Parker@comcast.net  652-885-2745  ************3734  \n3            Laura_M@gmail.com  364-656-8427  ************5677  \n4           LHines@verizon.com  713-226-5883  ************5498  \n\n[5 rows x 36 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>hotel</th>\n      <th>is_canceled</th>\n      <th>lead_time</th>\n      <th>arrival_date_year</th>\n      <th>arrival_date_month</th>\n      <th>arrival_date_week_number</th>\n      <th>arrival_date_day_of_month</th>\n      <th>stays_in_weekend_nights</th>\n      <th>stays_in_week_nights</th>\n      <th>adults</th>\n      <th>...</th>\n      <th>customer_type</th>\n      <th>adr</th>\n      <th>required_car_parking_spaces</th>\n      <th>total_of_special_requests</th>\n      <th>reservation_status</th>\n      <th>reservation_status_date</th>\n      <th>name</th>\n      <th>email</th>\n      <th>phone-number</th>\n      <th>credit_card</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Resort Hotel</td>\n      <td>0</td>\n      <td>342</td>\n      <td>2015</td>\n      <td>July</td>\n      <td>27</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>...</td>\n      <td>Transient</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Check-Out</td>\n      <td>2015-07-01</td>\n      <td>Ernest Barnes</td>\n      <td>Ernest.Barnes31@outlook.com</td>\n      <td>669-792-1661</td>\n      <td>************4322</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Resort Hotel</td>\n      <td>0</td>\n      <td>737</td>\n      <td>2015</td>\n      <td>July</td>\n      <td>27</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>2</td>\n      <td>...</td>\n      <td>Transient</td>\n      <td>0.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Check-Out</td>\n      <td>2015-07-01</td>\n      <td>Andrea Baker</td>\n      <td>Andrea_Baker94@aol.com</td>\n      <td>858-637-6955</td>\n      <td>************9157</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Resort Hotel</td>\n      <td>0</td>\n      <td>7</td>\n      <td>2015</td>\n      <td>July</td>\n      <td>27</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>Transient</td>\n      <td>75.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Check-Out</td>\n      <td>2015-07-02</td>\n      <td>Rebecca Parker</td>\n      <td>Rebecca_Parker@comcast.net</td>\n      <td>652-885-2745</td>\n      <td>************3734</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Resort Hotel</td>\n      <td>0</td>\n      <td>13</td>\n      <td>2015</td>\n      <td>July</td>\n      <td>27</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>Transient</td>\n      <td>75.0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Check-Out</td>\n      <td>2015-07-02</td>\n      <td>Laura Murray</td>\n      <td>Laura_M@gmail.com</td>\n      <td>364-656-8427</td>\n      <td>************5677</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Resort Hotel</td>\n      <td>0</td>\n      <td>14</td>\n      <td>2015</td>\n      <td>July</td>\n      <td>27</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>2</td>\n      <td>...</td>\n      <td>Transient</td>\n      <td>98.0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>Check-Out</td>\n      <td>2015-07-03</td>\n      <td>Linda Hines</td>\n      <td>LHines@verizon.com</td>\n      <td>713-226-5883</td>\n      <td>************5498</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 36 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 2,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1727310159202
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataframe_reservas_hotel_raw.info()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 119390 entries, 0 to 119389\nData columns (total 37 columns):\n #   Column                          Non-Null Count   Dtype  \n---  ------                          --------------   -----  \n 0   hotel                           119390 non-null  object \n 1   is_canceled                     119390 non-null  int64  \n 2   lead_time                       119390 non-null  int64  \n 3   arrival_date_year               119390 non-null  int64  \n 4   arrival_date_month              119390 non-null  object \n 5   arrival_date_week_number        119390 non-null  int64  \n 6   arrival_date_day_of_month       119390 non-null  int64  \n 7   stays_in_weekend_nights         119390 non-null  int64  \n 8   stays_in_week_nights            119390 non-null  int64  \n 9   adults                          119390 non-null  int64  \n 10  children                        119386 non-null  float64\n 11  babies                          119390 non-null  int64  \n 12  meal                            119390 non-null  object \n 13  country                         118902 non-null  object \n 14  market_segment                  119390 non-null  object \n 15  distribution_channel            119390 non-null  object \n 16  is_repeated_guest               119390 non-null  int64  \n 17  previous_cancellations          119390 non-null  int64  \n 18  previous_bookings_not_canceled  119390 non-null  int64  \n 19  reserved_room_type              119390 non-null  object \n 20  assigned_room_type              119390 non-null  object \n 21  booking_changes                 119390 non-null  int64  \n 22  deposit_type                    119390 non-null  object \n 23  agent                           103050 non-null  float64\n 24  company                         6797 non-null    float64\n 25  days_in_waiting_list            119390 non-null  int64  \n 26  customer_type                   119390 non-null  object \n 27  adr                             119390 non-null  float64\n 28  required_car_parking_spaces     119390 non-null  int64  \n 29  total_of_special_requests       119390 non-null  int64  \n 30  reservation_status              119390 non-null  object \n 31  reservation_status_date         119390 non-null  object \n 32  name                            119390 non-null  object \n 33  email                           119390 non-null  object \n 34  phone-number                    119390 non-null  object \n 35  credit_card                     119390 non-null  object \n 36  is_city_hotel                   119390 non-null  int64  \ndtypes: float64(4), int64(17), object(16)\nmemory usage: 33.7+ MB\n"
        }
      ],
      "execution_count": 34,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726535000717
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# ANALISIS DE LOS CLIENTES NUEVOS EN SU ADR\n",
        "# ADR: https://www.investopedia.com/terms/a/average-daily-rate.asp#:~:text=The%20average%20daily%20rate%20(ADR)%20is%20a%20metric%20widely%20used,(KPI)%20of%20the%20industry.\n",
        "dataframe_reservas_hotel_raw[dataframe_reservas_hotel_raw[\"is_repeated_guest\"]==0].groupby(\"is_canceled\").agg({\"adr\": [np.mean, np.min, np.max]})"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 121,
          "data": {
            "text/plain": "                    adr             \n                   mean  min     max\nis_canceled                         \n0            101.670375  0.0   510.0\n1            105.357324  0.0  5400.0",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"3\" halign=\"left\">adr</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th>mean</th>\n      <th>min</th>\n      <th>max</th>\n    </tr>\n    <tr>\n      <th>is_canceled</th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>101.670375</td>\n      <td>0.0</td>\n      <td>510.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>105.357324</td>\n      <td>0.0</td>\n      <td>5400.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 121,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726539271985
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.displot(data=dataframe_reservas_hotel_raw, x=\"adr\", col=\"is_canceled\")"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 113,
          "data": {
            "text/plain": "<seaborn.axisgrid.FacetGrid at 0x7f1ec76a0100>"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1000x500 with 2 Axes>",
            "image/png": ""
          },
          "metadata": {}
        }
      ],
      "execution_count": 113,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726539080536
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataframe_reservas_hotel_raw[\"deposit_type\"].value_counts()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 110,
          "data": {
            "text/plain": "No Deposit    104641\nNon Refund     14587\nRefundable       162\nName: deposit_type, dtype: int64"
          },
          "metadata": {}
        }
      ],
      "execution_count": 110,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726538841388
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataframe_reservas_hotel_raw[\"reservation_status\"].value_counts()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 123,
          "data": {
            "text/plain": "Check-Out    75166\nCanceled     43017\nNo-Show       1207\nName: reservation_status, dtype: int64"
          },
          "metadata": {}
        }
      ],
      "execution_count": 123,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726539472477
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.countplot(data=dataframe_reservas_hotel_raw, x=\"arrival_date_year\", hue=\"is_canceled\")"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 36,
          "data": {
            "text/plain": "<Axes: xlabel='arrival_date_year', ylabel='count'>"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1500x1000 with 1 Axes>",
            "image/png": ""
          },
          "metadata": {}
        }
      ],
      "execution_count": 36,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726535142180
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.countplot(data=dataframe_reservas_hotel_raw, x=\"hotel\", hue=\"is_canceled\")\n",
        "plt.title(\"Conteo Tipo de Hotel\")"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 18,
          "data": {
            "text/plain": "Text(0.5, 1.0, 'Conteo Tipo de Hotel')"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1500x1000 with 1 Axes>",
            "image/png": ""
          },
          "metadata": {}
        }
      ],
      "execution_count": 18,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726534393574
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.displot(data=dataframe_reservas_hotel_raw, x=\"lead_time\")"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 33,
          "data": {
            "text/plain": "<seaborn.axisgrid.FacetGrid at 0x7f1eeb929820>"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 500x500 with 1 Axes>",
            "image/png": ""
          },
          "metadata": {}
        }
      ],
      "execution_count": 33,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726534951842
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "sns.displot(data=dataframe_reservas_hotel_raw, x=\"arrival_date_day_of_month\", hue=\"is_canceled\")"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 65,
          "data": {
            "text/plain": "<seaborn.axisgrid.FacetGrid at 0x7f1ecae14c10>"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 591.486x500 with 1 Axes>",
            "image/png": ""
          },
          "metadata": {}
        }
      ],
      "execution_count": 65,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726536370244
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataframe_reservas_hotel_raw[\"country\"]"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 88,
          "data": {
            "text/plain": "0         PRT\n1         PRT\n2         GBR\n3         GBR\n4         GBR\n         ... \n119385    BEL\n119386    FRA\n119387    DEU\n119388    GBR\n119389    DEU\nName: country, Length: 119390, dtype: object"
          },
          "metadata": {}
        }
      ],
      "execution_count": 88,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726537349589
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "hasher = FeatureHasher(n_features=177,input_type=\"string\")\n",
        "_fitted_hasher = hasher.fit(dataframe_reservas_hotel_raw[\"country\"])\n",
        "_fitted_hasher.transform(dataframe_reservas_hotel_raw[[\"country\"]])"
      ],
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "Samples can not be a single string. The input must be an iterable over iterables of strings.",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "Cell \u001b[0;32mIn[93], line 3\u001b[0m\n\u001b[1;32m      1\u001b[0m hasher \u001b[38;5;241m=\u001b[39m FeatureHasher(n_features\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m177\u001b[39m,input_type\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mstring\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m      2\u001b[0m _fitted_hasher \u001b[38;5;241m=\u001b[39m hasher\u001b[38;5;241m.\u001b[39mfit(dataframe_reservas_hotel_raw[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcountry\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n\u001b[0;32m----> 3\u001b[0m \u001b[43m_fitted_hasher\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mtransform\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdataframe_reservas_hotel_raw\u001b[49m\u001b[43m[\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcountry\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m]\u001b[49m\u001b[43m)\u001b[49m\n",
            "File \u001b[0;32m/anaconda/envs/dsrp-featureengineering/lib/python3.9/site-packages/sklearn/utils/_set_output.py:316\u001b[0m, in \u001b[0;36m_wrap_method_output.<locals>.wrapped\u001b[0;34m(self, X, *args, **kwargs)\u001b[0m\n\u001b[1;32m    314\u001b[0m \u001b[38;5;129m@wraps\u001b[39m(f)\n\u001b[1;32m    315\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mwrapped\u001b[39m(\u001b[38;5;28mself\u001b[39m, X, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m--> 316\u001b[0m     data_to_wrap \u001b[38;5;241m=\u001b[39m \u001b[43mf\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mX\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    317\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(data_to_wrap, \u001b[38;5;28mtuple\u001b[39m):\n\u001b[1;32m    318\u001b[0m         \u001b[38;5;66;03m# only wrap the first output for cross decomposition\u001b[39;00m\n\u001b[1;32m    319\u001b[0m         return_tuple \u001b[38;5;241m=\u001b[39m (\n\u001b[1;32m    320\u001b[0m             _wrap_data_with_container(method, data_to_wrap[\u001b[38;5;241m0\u001b[39m], X, \u001b[38;5;28mself\u001b[39m),\n\u001b[1;32m    321\u001b[0m             \u001b[38;5;241m*\u001b[39mdata_to_wrap[\u001b[38;5;241m1\u001b[39m:],\n\u001b[1;32m    322\u001b[0m         )\n",
            "File \u001b[0;32m/anaconda/envs/dsrp-featureengineering/lib/python3.9/site-packages/sklearn/feature_extraction/_hash.py:172\u001b[0m, in \u001b[0;36mFeatureHasher.transform\u001b[0;34m(self, raw_X)\u001b[0m\n\u001b[1;32m    170\u001b[0m first_raw_X \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mnext\u001b[39m(raw_X)\n\u001b[1;32m    171\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(first_raw_X, \u001b[38;5;28mstr\u001b[39m):\n\u001b[0;32m--> 172\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[1;32m    173\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mSamples can not be a single string. The input must be an iterable\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    174\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m over iterables of strings.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m    175\u001b[0m     )\n\u001b[1;32m    176\u001b[0m raw_X_ \u001b[38;5;241m=\u001b[39m chain([first_raw_X], raw_X)\n\u001b[1;32m    177\u001b[0m raw_X \u001b[38;5;241m=\u001b[39m (((f, \u001b[38;5;241m1\u001b[39m) \u001b[38;5;28;01mfor\u001b[39;00m f \u001b[38;5;129;01min\u001b[39;00m x) \u001b[38;5;28;01mfor\u001b[39;00m x \u001b[38;5;129;01min\u001b[39;00m raw_X_)\n",
            "\u001b[0;31mValueError\u001b[0m: Samples can not be a single string. The input must be an iterable over iterables of strings."
          ]
        }
      ],
      "execution_count": 93,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726537512247
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataframe_reservas_hotel_raw[\"country\"].value_counts()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 84,
          "data": {
            "text/plain": "PRT    48590\nGBR    12129\nFRA    10415\nESP     8568\nDEU     7287\n       ...  \nFJI        1\nUMI        1\nLCA        1\nMRT        1\nASM        1\nName: country, Length: 177, dtype: int64"
          },
          "metadata": {}
        }
      ],
      "execution_count": 84,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726537036217
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Pipeline de procesamiento"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "from typing import List, Union\n",
        "\n",
        "class DataProcessor:\n",
        "    \"\"\"\n",
        "    Procesador de datos de Reservas de hoteles\n",
        "    \"\"\"\n",
        "\n",
        "    def __init__(self, client: MLClient,  data: pd.DataFrame):\n",
        "        self.client = client\n",
        "        self.data = data\n",
        "\n",
        "\n",
        "    def __encode_with_ohe(self, col_names: Union[str, List[str]]):\n",
        "        \"\"\"\n",
        "        ONE HOT ENCODING DE CUALQUIER COLUMNA\n",
        "\n",
        "        col_names: LIST DE COLUMNAS PARA APLICAR OHE\n",
        "        \"\"\"\n",
        "        encoded_dfs = []\n",
        "        for col in col_names:\n",
        "\n",
        "            encoder = OneHotEncoder()\n",
        "            fitted_encoder = encoder.fit(self.data[[col]])\n",
        "            encoded_array = fitted_encoder.transform(self.data[[col]]).toarray()\n",
        "            encoded_df = pd.DataFrame(encoded_array, columns= fitted_encoder.get_feature_names_out())\n",
        "            encoded_dfs.append(encoded_df)\n",
        "\n",
        "        return pd.concat(encoded_dfs, axis=1)\n",
        "\n",
        "\n",
        "    def process(self):\n",
        "\n",
        "        \"\"\"\n",
        "        PROCESAMIENTO PRINCIPAL\n",
        "        \"\"\"\n",
        "\n",
        "        # VARIABLE QUE CALCULA SI EL HOTEL ESTA EN LA CIUDAD\n",
        "        self.data[\"is_city_hotel\"] = self.data[\"hotel\"].apply(lambda x: int(x == \"City Hotel\"))\n",
        "        self.data = self.data.drop(\"hotel\", axis=1 )\n",
        "\n",
        "         # CREAR DIFERENCIA ENTRE CUARTO RESERVADO Y CUARTO ASIGNADO\n",
        "        self.data[\"diff_room\"] = np.where(self.data[\"assigned_room_type\"] == self.data[\"reserved_room_type\"], 1, 0)\n",
        "\n",
        "\n",
        "        # LISTA DE COLUMNAS PARA HACER ONE HOT ENCODDING \n",
        "        ohe_column_list = [\n",
        "            \"arrival_date_year\", \n",
        "            \"arrival_date_month\",\n",
        "            \"meal\",\n",
        "            \"market_segment\",\n",
        "            \"distribution_channel\", \n",
        "            \"reserved_room_type\",\n",
        "            \"deposit_type\",\n",
        "            \"customer_type\"\n",
        "        ]\n",
        "\n",
        "        encoded_dfs = self.__encode_with_ohe(col_names=ohe_column_list)\n",
        "        self.data = pd.concat([self.data, encoded_dfs], axis=1)\n",
        "        self.data = self.data.drop(ohe_column_list, axis=1)\n",
        "\n",
        "        # IMPUTACION VARIABLE CHILDREN\n",
        "        self.data[\"children\"] = dataframe_reservas_hotel_raw[\"children\"].fillna(0)\n",
        "\n",
        "       \n",
        "\n",
        "        # COLUMNAS QUE VAMOS A ELIMINAR\n",
        "        drop_list = [\n",
        "            \"country\", \n",
        "            \"company\", \n",
        "            \"agent\",\n",
        "            \"reservation_status\", \n",
        "            \"reservation_status_date\",\n",
        "            \"name\", \n",
        "            \"email\", \n",
        "            \"phone-number\", \n",
        "            \"credit_card\",\n",
        "            \"assigned_room_type\"\n",
        "        ]\n",
        "\n",
        "        self.data = self.data.drop(drop_list, axis=1)\n",
        "\n",
        "        # FEATURE SELECTOR - VARIANZA\n",
        "        selector = VarianceThreshold()\n",
        "        selected_variables = selector.fit_transform(self.data)\n",
        "\n",
        "        print([ i for i in self.data.columns  if i not in selector.get_feature_names_out() ] )\n",
        "        self.data = pd.DataFrame(selected_variables, columns=selector.get_feature_names_out())\n",
        "\n",
        "        # STANDARDIZATION\n",
        "        std_vars = [\"lead_time\", \"adr\", \"days_in_waiting_list\"]\n",
        "        scales = []\n",
        "        for col in std_vars:\n",
        "            scaler = StandardScaler()  # OTROS METODOS MinMaxScaler, RobustScaler\n",
        "            scaled_var = pd.DataFrame(\n",
        "                scaler.fit_transform(dataframe_reservas_hotel_raw[col].to_numpy().reshape(-1, 1)), columns=[col]\n",
        "            )\n",
        "            scales.append(scaled_var)\n",
        "        \n",
        "        scales = pd.concat(scales, axis=1)\n",
        "        self.data = self.data.drop(std_vars, axis=1)\n",
        "        self.data = pd.concat([self.data, scales], axis=1)\n",
        "\n",
        "    def write(self, version: int):\n",
        "\n",
        "        PROCESSED_DATA_PATH = \"feature_engineering_data_PROCESSED.csv\"\n",
        "        self.data.to_csv(PROCESSED_DATA_PATH,index=False)\n",
        "        processed_dataset = Data(\n",
        "            path=PROCESSED_DATA_PATH,\n",
        "            type=AssetTypes.URI_FILE,\n",
        "            description=\"Tabla Final Feature Engineering\",\n",
        "            name=\"gold-booking-dsrp\",\n",
        "            version=str(version)\n",
        "        )\n",
        "        self.client.data.create_or_update(processed_dataset)\n"
      ],
      "outputs": [],
      "execution_count": 20,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1727311487789
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "scaler = StandardScaler()\n",
        "pd.DataFrame(scaler.fit_transform(dataframe_reservas_hotel_raw[\"adr\"].to_numpy().reshape(-1, 1)), columns=[\"adr\"]"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 13,
          "data": {
            "text/plain": "<Axes: xlabel='adr', ylabel='Count'>"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": "<Figure size 1500x1000 with 1 Axes>",
            "image/png": ""
          },
          "metadata": {}
        }
      ],
      "execution_count": 13,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1727311159206
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataframe_reservas_hotel_raw[dataframe_reservas_hotel_raw[\"children\"].isna()][[\"children\"]]"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 70,
          "data": {
            "text/plain": "       children\n40600       NaN\n40667       NaN\n40679       NaN\n41160       NaN",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>children</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>40600</th>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>40667</th>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>40679</th>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>41160</th>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 70,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726536700112
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pd.DataFrame(dataframe_reservas_hotel_raw[[\"reserved_room_type\", \"assigned_room_type\",]].value_counts())"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 136,
          "data": {
            "text/plain": "                                           0\nreserved_room_type assigned_room_type       \nA                  A                   73598\nD                  D                   17736\nA                  D                    7548\nE                  E                    5923\nF                  F                    2707\n...                                      ...\nL                  C                       1\nH                  D                       1\nL                  A                       1\n                   H                       1\n                   L                       1\n\n[75 rows x 1 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th></th>\n      <th>0</th>\n    </tr>\n    <tr>\n      <th>reserved_room_type</th>\n      <th>assigned_room_type</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>A</th>\n      <th>A</th>\n      <td>73598</td>\n    </tr>\n    <tr>\n      <th>D</th>\n      <th>D</th>\n      <td>17736</td>\n    </tr>\n    <tr>\n      <th>A</th>\n      <th>D</th>\n      <td>7548</td>\n    </tr>\n    <tr>\n      <th>E</th>\n      <th>E</th>\n      <td>5923</td>\n    </tr>\n    <tr>\n      <th>F</th>\n      <th>F</th>\n      <td>2707</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>L</th>\n      <th>C</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>H</th>\n      <th>D</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th rowspan=\"3\" valign=\"top\">L</th>\n      <th>A</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>H</th>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>L</th>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>75 rows Ã— 1 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 136,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726539717992
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "dataframe_reservas_hotel_raw[\"children\"].isna().sum()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 74,
          "data": {
            "text/plain": "4"
          },
          "metadata": {}
        }
      ],
      "execution_count": 74,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726536761107
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "selector = VarianceThreshold()\n",
        "selector.fit_transform(dataframe_reservas_hotel_raw[[\"is_canceled\"]])"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 144,
          "data": {
            "text/plain": "array([[0],\n       [0],\n       [0],\n       ...,\n       [0],\n       [0],\n       [0]])"
          },
          "metadata": {}
        }
      ],
      "execution_count": 144,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726539989857
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "selector.get_feature_names_out()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 149,
          "data": {
            "text/plain": "array(['is_canceled'], dtype=object)"
          },
          "metadata": {}
        }
      ],
      "execution_count": 149,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1726540092255
        }
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Pipeline Feature Engineering"
      ],
      "metadata": {
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "processor1 = DataProcessor(client=ml_client, data=dataframe_reservas_hotel_raw)\n",
        "processor1.process()"
      ],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "processor2 = DataProcessor(client=ml_client2, data=dataframe_reservas_hotel_raw)\n",
        "processor2.process()"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": "[]\n"
        }
      ],
      "execution_count": 21,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1727311491639
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "processor.data"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 22,
          "data": {
            "text/plain": "        is_canceled  arrival_date_week_number  arrival_date_day_of_month  \\\n0               0.0                      27.0                        1.0   \n1               0.0                      27.0                        1.0   \n2               0.0                      27.0                        1.0   \n3               0.0                      27.0                        1.0   \n4               0.0                      27.0                        1.0   \n...             ...                       ...                        ...   \n119385          0.0                      35.0                       30.0   \n119386          0.0                      35.0                       31.0   \n119387          0.0                      35.0                       31.0   \n119388          0.0                      35.0                       31.0   \n119389          0.0                      35.0                       29.0   \n\n        stays_in_weekend_nights  stays_in_week_nights  adults  children  \\\n0                           0.0                   0.0     2.0       0.0   \n1                           0.0                   0.0     2.0       0.0   \n2                           0.0                   1.0     1.0       0.0   \n3                           0.0                   1.0     1.0       0.0   \n4                           0.0                   2.0     2.0       0.0   \n...                         ...                   ...     ...       ...   \n119385                      2.0                   5.0     2.0       0.0   \n119386                      2.0                   5.0     3.0       0.0   \n119387                      2.0                   5.0     2.0       0.0   \n119388                      2.0                   5.0     2.0       0.0   \n119389                      2.0                   7.0     2.0       0.0   \n\n        babies  is_repeated_guest  previous_cancellations  ...  \\\n0          0.0                0.0                     0.0  ...   \n1          0.0                0.0                     0.0  ...   \n2          0.0                0.0                     0.0  ...   \n3          0.0                0.0                     0.0  ...   \n4          0.0                0.0                     0.0  ...   \n...        ...                ...                     ...  ...   \n119385     0.0                0.0                     0.0  ...   \n119386     0.0                0.0                     0.0  ...   \n119387     0.0                0.0                     0.0  ...   \n119388     0.0                0.0                     0.0  ...   \n119389     0.0                0.0                     0.0  ...   \n\n        deposit_type_No Deposit  deposit_type_Non Refund  \\\n0                           1.0                      0.0   \n1                           1.0                      0.0   \n2                           1.0                      0.0   \n3                           1.0                      0.0   \n4                           1.0                      0.0   \n...                         ...                      ...   \n119385                      1.0                      0.0   \n119386                      1.0                      0.0   \n119387                      1.0                      0.0   \n119388                      1.0                      0.0   \n119389                      1.0                      0.0   \n\n        deposit_type_Refundable  customer_type_Contract  customer_type_Group  \\\n0                           0.0                     0.0                  0.0   \n1                           0.0                     0.0                  0.0   \n2                           0.0                     0.0                  0.0   \n3                           0.0                     0.0                  0.0   \n4                           0.0                     0.0                  0.0   \n...                         ...                     ...                  ...   \n119385                      0.0                     0.0                  0.0   \n119386                      0.0                     0.0                  0.0   \n119387                      0.0                     0.0                  0.0   \n119388                      0.0                     0.0                  0.0   \n119389                      0.0                     0.0                  0.0   \n\n        customer_type_Transient  customer_type_Transient-Party  lead_time  \\\n0                           1.0                            0.0   2.227051   \n1                           1.0                            0.0   5.923385   \n2                           1.0                            0.0  -0.907814   \n3                           1.0                            0.0  -0.851667   \n4                           1.0                            0.0  -0.842309   \n...                         ...                            ...        ...   \n119385                      1.0                            0.0  -0.758089   \n119386                      1.0                            0.0  -0.018822   \n119387                      1.0                            0.0  -0.655153   \n119388                      1.0                            0.0   0.046682   \n119389                      1.0                            0.0   0.945032   \n\n             adr  days_in_waiting_list  \n0      -2.015038             -0.131924  \n1      -2.015038             -0.131924  \n2      -0.530935             -0.131924  \n3      -0.530935             -0.131924  \n4      -0.075810             -0.131924  \n...          ...                   ...  \n119385 -0.112616             -0.131924  \n119386  2.445779             -0.131924  \n119387  1.105733             -0.131924  \n119388  0.050833             -0.131924  \n119389  0.976913             -0.131924  \n\n[119390 rows x 69 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>is_canceled</th>\n      <th>arrival_date_week_number</th>\n      <th>arrival_date_day_of_month</th>\n      <th>stays_in_weekend_nights</th>\n      <th>stays_in_week_nights</th>\n      <th>adults</th>\n      <th>children</th>\n      <th>babies</th>\n      <th>is_repeated_guest</th>\n      <th>previous_cancellations</th>\n      <th>...</th>\n      <th>deposit_type_No Deposit</th>\n      <th>deposit_type_Non Refund</th>\n      <th>deposit_type_Refundable</th>\n      <th>customer_type_Contract</th>\n      <th>customer_type_Group</th>\n      <th>customer_type_Transient</th>\n      <th>customer_type_Transient-Party</th>\n      <th>lead_time</th>\n      <th>adr</th>\n      <th>days_in_waiting_list</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0</td>\n      <td>27.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>2.227051</td>\n      <td>-2.015038</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.0</td>\n      <td>27.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>5.923385</td>\n      <td>-2.015038</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.0</td>\n      <td>27.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.907814</td>\n      <td>-0.530935</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.0</td>\n      <td>27.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.851667</td>\n      <td>-0.530935</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.0</td>\n      <td>27.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.842309</td>\n      <td>-0.075810</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>119385</th>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>30.0</td>\n      <td>2.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.758089</td>\n      <td>-0.112616</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>119386</th>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>31.0</td>\n      <td>2.0</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.018822</td>\n      <td>2.445779</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>119387</th>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>31.0</td>\n      <td>2.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.655153</td>\n      <td>1.105733</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>119388</th>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>31.0</td>\n      <td>2.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.046682</td>\n      <td>0.050833</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>119389</th>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>29.0</td>\n      <td>2.0</td>\n      <td>7.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.945032</td>\n      <td>0.976913</td>\n      <td>-0.131924</td>\n    </tr>\n  </tbody>\n</table>\n<p>119390 rows Ã— 69 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 22,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1727311493390
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "processor.data.describe()"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 6,
          "data": {
            "text/plain": "         is_canceled      lead_time  arrival_date_week_number  \\\ncount  119390.000000  119390.000000             119390.000000   \nmean        0.370416     104.011416                 27.165173   \nstd         0.482918     106.863097                 13.605138   \nmin         0.000000       0.000000                  1.000000   \n25%         0.000000      18.000000                 16.000000   \n50%         0.000000      69.000000                 28.000000   \n75%         1.000000     160.000000                 38.000000   \nmax         1.000000     737.000000                 53.000000   \n\n       arrival_date_day_of_month  stays_in_weekend_nights  \\\ncount              119390.000000            119390.000000   \nmean                   15.798241                 0.927599   \nstd                     8.780829                 0.998613   \nmin                     1.000000                 0.000000   \n25%                     8.000000                 0.000000   \n50%                    16.000000                 1.000000   \n75%                    23.000000                 2.000000   \nmax                    31.000000                19.000000   \n\n       stays_in_week_nights         adults       children         babies  \\\ncount         119390.000000  119390.000000  119390.000000  119390.000000   \nmean               2.500302       1.856403       0.103886       0.007949   \nstd                1.908286       0.579261       0.398555       0.097436   \nmin                0.000000       0.000000       0.000000       0.000000   \n25%                1.000000       2.000000       0.000000       0.000000   \n50%                2.000000       2.000000       0.000000       0.000000   \n75%                3.000000       2.000000       0.000000       0.000000   \nmax               50.000000      55.000000      10.000000      10.000000   \n\n       is_repeated_guest  ...  reserved_room_type_H  reserved_room_type_L  \\\ncount      119390.000000  ...         119390.000000         119390.000000   \nmean            0.031912  ...              0.005034              0.000050   \nstd             0.175767  ...              0.070772              0.007089   \nmin             0.000000  ...              0.000000              0.000000   \n25%             0.000000  ...              0.000000              0.000000   \n50%             0.000000  ...              0.000000              0.000000   \n75%             0.000000  ...              0.000000              0.000000   \nmax             1.000000  ...              1.000000              1.000000   \n\n       reserved_room_type_P  deposit_type_No Deposit  deposit_type_Non Refund  \\\ncount         119390.000000            119390.000000            119390.000000   \nmean               0.000101                 0.876464                 0.122179   \nstd                0.010025                 0.329053                 0.327494   \nmin                0.000000                 0.000000                 0.000000   \n25%                0.000000                 1.000000                 0.000000   \n50%                0.000000                 1.000000                 0.000000   \n75%                0.000000                 1.000000                 0.000000   \nmax                1.000000                 1.000000                 1.000000   \n\n       deposit_type_Refundable  customer_type_Contract  customer_type_Group  \\\ncount            119390.000000            119390.00000        119390.000000   \nmean                  0.001357                 0.03414             0.004833   \nstd                   0.036811                 0.18159             0.069351   \nmin                   0.000000                 0.00000             0.000000   \n25%                   0.000000                 0.00000             0.000000   \n50%                   0.000000                 0.00000             0.000000   \n75%                   0.000000                 0.00000             0.000000   \nmax                   1.000000                 1.00000             1.000000   \n\n       customer_type_Transient  customer_type_Transient-Party  \ncount            119390.000000                  119390.000000  \nmean                  0.750591                       0.210436  \nstd                   0.432673                       0.407620  \nmin                   0.000000                       0.000000  \n25%                   1.000000                       0.000000  \n50%                   1.000000                       0.000000  \n75%                   1.000000                       0.000000  \nmax                   1.000000                       1.000000  \n\n[8 rows x 69 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>is_canceled</th>\n      <th>lead_time</th>\n      <th>arrival_date_week_number</th>\n      <th>arrival_date_day_of_month</th>\n      <th>stays_in_weekend_nights</th>\n      <th>stays_in_week_nights</th>\n      <th>adults</th>\n      <th>children</th>\n      <th>babies</th>\n      <th>is_repeated_guest</th>\n      <th>...</th>\n      <th>reserved_room_type_H</th>\n      <th>reserved_room_type_L</th>\n      <th>reserved_room_type_P</th>\n      <th>deposit_type_No Deposit</th>\n      <th>deposit_type_Non Refund</th>\n      <th>deposit_type_Refundable</th>\n      <th>customer_type_Contract</th>\n      <th>customer_type_Group</th>\n      <th>customer_type_Transient</th>\n      <th>customer_type_Transient-Party</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>...</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.00000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n      <td>119390.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.370416</td>\n      <td>104.011416</td>\n      <td>27.165173</td>\n      <td>15.798241</td>\n      <td>0.927599</td>\n      <td>2.500302</td>\n      <td>1.856403</td>\n      <td>0.103886</td>\n      <td>0.007949</td>\n      <td>0.031912</td>\n      <td>...</td>\n      <td>0.005034</td>\n      <td>0.000050</td>\n      <td>0.000101</td>\n      <td>0.876464</td>\n      <td>0.122179</td>\n      <td>0.001357</td>\n      <td>0.03414</td>\n      <td>0.004833</td>\n      <td>0.750591</td>\n      <td>0.210436</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.482918</td>\n      <td>106.863097</td>\n      <td>13.605138</td>\n      <td>8.780829</td>\n      <td>0.998613</td>\n      <td>1.908286</td>\n      <td>0.579261</td>\n      <td>0.398555</td>\n      <td>0.097436</td>\n      <td>0.175767</td>\n      <td>...</td>\n      <td>0.070772</td>\n      <td>0.007089</td>\n      <td>0.010025</td>\n      <td>0.329053</td>\n      <td>0.327494</td>\n      <td>0.036811</td>\n      <td>0.18159</td>\n      <td>0.069351</td>\n      <td>0.432673</td>\n      <td>0.407620</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.000000</td>\n      <td>18.000000</td>\n      <td>16.000000</td>\n      <td>8.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>0.000000</td>\n      <td>69.000000</td>\n      <td>28.000000</td>\n      <td>16.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1.000000</td>\n      <td>160.000000</td>\n      <td>38.000000</td>\n      <td>23.000000</td>\n      <td>2.000000</td>\n      <td>3.000000</td>\n      <td>2.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>1.000000</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>1.000000</td>\n      <td>737.000000</td>\n      <td>53.000000</td>\n      <td>31.000000</td>\n      <td>19.000000</td>\n      <td>50.000000</td>\n      <td>55.000000</td>\n      <td>10.000000</td>\n      <td>10.000000</td>\n      <td>1.000000</td>\n      <td>...</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.00000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows Ã— 69 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 6,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1727310189783
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "processor.write(version=4)"
      ],
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": "\u001b[32mUploading feature_engineering_data_PROCESSED.csv\u001b[32m (< 1 MB): 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 38.9M/38.9M [00:00<00:00, 96.8MB/s]\n\u001b[39m\n\n"
        }
      ],
      "execution_count": 23,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1727311519790
        }
      }
    },
    {
      "cell_type": "code",
      "source": [
        "test_gold_data = ml_client.data.get(\"gold-booking-dsrp\", version=\"3\")\n",
        "pd.read_csv(test_gold_data.path)"
      ],
      "outputs": [
        {
          "output_type": "execute_result",
          "execution_count": 24,
          "data": {
            "text/plain": "        is_canceled  arrival_date_week_number  arrival_date_day_of_month  \\\n0               0.0                      27.0                        1.0   \n1               0.0                      27.0                        1.0   \n2               0.0                      27.0                        1.0   \n3               0.0                      27.0                        1.0   \n4               0.0                      27.0                        1.0   \n...             ...                       ...                        ...   \n119385          0.0                      35.0                       30.0   \n119386          0.0                      35.0                       31.0   \n119387          0.0                      35.0                       31.0   \n119388          0.0                      35.0                       31.0   \n119389          0.0                      35.0                       29.0   \n\n        stays_in_weekend_nights  stays_in_week_nights  adults  children  \\\n0                           0.0                   0.0     2.0       0.0   \n1                           0.0                   0.0     2.0       0.0   \n2                           0.0                   1.0     1.0       0.0   \n3                           0.0                   1.0     1.0       0.0   \n4                           0.0                   2.0     2.0       0.0   \n...                         ...                   ...     ...       ...   \n119385                      2.0                   5.0     2.0       0.0   \n119386                      2.0                   5.0     3.0       0.0   \n119387                      2.0                   5.0     2.0       0.0   \n119388                      2.0                   5.0     2.0       0.0   \n119389                      2.0                   7.0     2.0       0.0   \n\n        babies  is_repeated_guest  previous_cancellations  ...  \\\n0          0.0                0.0                     0.0  ...   \n1          0.0                0.0                     0.0  ...   \n2          0.0                0.0                     0.0  ...   \n3          0.0                0.0                     0.0  ...   \n4          0.0                0.0                     0.0  ...   \n...        ...                ...                     ...  ...   \n119385     0.0                0.0                     0.0  ...   \n119386     0.0                0.0                     0.0  ...   \n119387     0.0                0.0                     0.0  ...   \n119388     0.0                0.0                     0.0  ...   \n119389     0.0                0.0                     0.0  ...   \n\n        deposit_type_No Deposit  deposit_type_Non Refund  \\\n0                           1.0                      0.0   \n1                           1.0                      0.0   \n2                           1.0                      0.0   \n3                           1.0                      0.0   \n4                           1.0                      0.0   \n...                         ...                      ...   \n119385                      1.0                      0.0   \n119386                      1.0                      0.0   \n119387                      1.0                      0.0   \n119388                      1.0                      0.0   \n119389                      1.0                      0.0   \n\n        deposit_type_Refundable  customer_type_Contract  customer_type_Group  \\\n0                           0.0                     0.0                  0.0   \n1                           0.0                     0.0                  0.0   \n2                           0.0                     0.0                  0.0   \n3                           0.0                     0.0                  0.0   \n4                           0.0                     0.0                  0.0   \n...                         ...                     ...                  ...   \n119385                      0.0                     0.0                  0.0   \n119386                      0.0                     0.0                  0.0   \n119387                      0.0                     0.0                  0.0   \n119388                      0.0                     0.0                  0.0   \n119389                      0.0                     0.0                  0.0   \n\n        customer_type_Transient  customer_type_Transient-Party  lead_time  \\\n0                           1.0                            0.0   2.227051   \n1                           1.0                            0.0   5.923385   \n2                           1.0                            0.0  -0.907814   \n3                           1.0                            0.0  -0.851667   \n4                           1.0                            0.0  -0.842309   \n...                         ...                            ...        ...   \n119385                      1.0                            0.0  -0.758089   \n119386                      1.0                            0.0  -0.018822   \n119387                      1.0                            0.0  -0.655153   \n119388                      1.0                            0.0   0.046682   \n119389                      1.0                            0.0   0.945032   \n\n             adr  days_in_waiting_list  \n0      -2.015038             -0.131924  \n1      -2.015038             -0.131924  \n2      -0.530935             -0.131924  \n3      -0.530935             -0.131924  \n4      -0.075810             -0.131924  \n...          ...                   ...  \n119385 -0.112616             -0.131924  \n119386  2.445779             -0.131924  \n119387  1.105733             -0.131924  \n119388  0.050833             -0.131924  \n119389  0.976913             -0.131924  \n\n[119390 rows x 69 columns]",
            "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>is_canceled</th>\n      <th>arrival_date_week_number</th>\n      <th>arrival_date_day_of_month</th>\n      <th>stays_in_weekend_nights</th>\n      <th>stays_in_week_nights</th>\n      <th>adults</th>\n      <th>children</th>\n      <th>babies</th>\n      <th>is_repeated_guest</th>\n      <th>previous_cancellations</th>\n      <th>...</th>\n      <th>deposit_type_No Deposit</th>\n      <th>deposit_type_Non Refund</th>\n      <th>deposit_type_Refundable</th>\n      <th>customer_type_Contract</th>\n      <th>customer_type_Group</th>\n      <th>customer_type_Transient</th>\n      <th>customer_type_Transient-Party</th>\n      <th>lead_time</th>\n      <th>adr</th>\n      <th>days_in_waiting_list</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0.0</td>\n      <td>27.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>2.227051</td>\n      <td>-2.015038</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0.0</td>\n      <td>27.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>5.923385</td>\n      <td>-2.015038</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0.0</td>\n      <td>27.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.907814</td>\n      <td>-0.530935</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0.0</td>\n      <td>27.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.851667</td>\n      <td>-0.530935</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0.0</td>\n      <td>27.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.842309</td>\n      <td>-0.075810</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>119385</th>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>30.0</td>\n      <td>2.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.758089</td>\n      <td>-0.112616</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>119386</th>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>31.0</td>\n      <td>2.0</td>\n      <td>5.0</td>\n      <td>3.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.018822</td>\n      <td>2.445779</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>119387</th>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>31.0</td>\n      <td>2.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>-0.655153</td>\n      <td>1.105733</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>119388</th>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>31.0</td>\n      <td>2.0</td>\n      <td>5.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.046682</td>\n      <td>0.050833</td>\n      <td>-0.131924</td>\n    </tr>\n    <tr>\n      <th>119389</th>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>29.0</td>\n      <td>2.0</td>\n      <td>7.0</td>\n      <td>2.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>1.0</td>\n      <td>0.0</td>\n      <td>0.945032</td>\n      <td>0.976913</td>\n      <td>-0.131924</td>\n    </tr>\n  </tbody>\n</table>\n<p>119390 rows Ã— 69 columns</p>\n</div>"
          },
          "metadata": {}
        }
      ],
      "execution_count": 24,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        },
        "gather": {
          "logged": 1727311525444
        }
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "outputs": [],
      "execution_count": null,
      "metadata": {
        "jupyter": {
          "source_hidden": false,
          "outputs_hidden": false
        },
        "nteract": {
          "transient": {
            "deleting": false
          }
        }
      }
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "dsrp-featureengineering",
      "language": "python",
      "display_name": "DP-100 Feature Engineering DSRP"
    },
    "language_info": {
      "name": "python",
      "version": "3.9.19",
      "mimetype": "text/x-python",
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "pygments_lexer": "ipython3",
      "nbconvert_exporter": "python",
      "file_extension": ".py"
    },
    "microsoft": {
      "ms_spell_check": {
        "ms_spell_check_language": "en"
      },
      "host": {
        "AzureML": {
          "notebookHasBeenCompleted": true
        }
      }
    },
    "kernel_info": {
      "name": "dsrp-featureengineering"
    },
    "nteract": {
      "version": "nteract-front-end@1.0.0"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}